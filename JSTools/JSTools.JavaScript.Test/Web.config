<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
	<section name="JSTools.net" type="JSTools.Web.Config.JSToolsConfigurationSection, JSTools.Web" />
  </configSections>

  <system.web>
	<httpModules>
		<add name="JSToolsScriptModule" type="JSTools.Web.Request.JSScriptModule, JSTools.Web" />
	</httpModules>

    <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug="true" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP .NET files.
    -->
    <compilation 
         defaultLanguage="c#"
         debug="true"
    />

    <!--  CUSTOM ERROR MESSAGES
          Set customError mode values to control the display of user-friendly 
          error messages to users instead of error details (including a stack trace):

          "On" Always display custom (friendly) messages  
          "Off" Always display detailed ASP.NET error information.
          "RemoteOnly" Display custom (friendly) messages only to users not running 
          on the local Web server. This setting is recommended for security purposes, so 
          that you do not display application detail information to remote clients.
    -->
    <customErrors 
    mode="RemoteOnly" 
    /> 

    <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are "Windows", "Forms", 
          "Passport" and "None"
    -->
    <authentication mode="Windows" /> 

    <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the "trace.axd" page from your web application
          root. 
    -->
    <trace
        enabled="false"
        requestLimit="10"
        pageOutput="false"
        traceMode="SortByTime"
		localOnly="true"
    />

    <!--  SESSION STATE SETTINGS
          By default ASP .NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless="true".
    -->
    <sessionState 
            mode="InProc"
            stateConnectionString="tcpip=127.0.0.1:42424"
            sqlConnectionString="data source=127.0.0.1;user id=sa;password="
            cookieless="false" 
            timeout="20" 
    />

    <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
    -->
    <globalization 
            requestEncoding="utf-8" 
            responseEncoding="utf-8" 
   />
   
 </system.web>

 <!--	JSTOOLS SCRIPT MODULE CONFIGURATION
		Contains the configuration capabilities of the JSTools. You can extend this sections
		with your own configuration entries. A configuration node must contain a valid type
		attribute and the specified type should have a poperty, which describes the name of
		the configuration node.

		All script configuration sections are immutable.
		
		CAUTION: There are errors if you specify a script files, which have not read permission.
		This error will occure, if the ASP.NET user has no read and execute permissions on the
		specified file.
 -->
 <JSTools.net standalone="false" source="E:\applications\JSTools 0.30\JSTools.Test\Resources\JSTools.config">
	<!--	EXCEPTION HANDLING CONFIGURATION
			Describes the behaviour of the client, if a JavaScript exception occurs.
	-->
	<exception
		log="true"
		alert="true"
		catch="false"
		requires="JSTools.Web.Diagnostics"
		type="JSTools.Config.ExceptionHandling.JSExceptionSectionHandlerFactory, JSTools.Config" />

	<!--	SCRIPT MANAGEMENT CONFIGURATION
			Contains the script management configuration capabilities of the JSTools.net FrameWork.
			
			The scripts node can accommodate the following attributes:
				language:		script language for the &lt;script /&gt; tag (e.g. javascript / vbscript / ...)
				version:		script version for the &lt;script /&gt; tag (e.g. 1.5 / 1.3 / 1.2 / ...)
				src:			source, where the script files are stored in the file system (e.g. C:\wwwroot\scripts)
				debug:			specifies if the script should be crunched and additional debug informations
								should be rendered (e.g. true / false)
				contentType:	Content type of the generated script files. The content type of static script files
								are platform dependent.
				extension:		Script file extension. The given extension should be handled by the asp.net environment.

			A module can contain files and sub modules. If the client requests a module with the
			using() directive, the server will deliver only the files belonging to the module.
			The functionality of a module may use some other functionalities on other modules.
			To check if these required modules exist, you can add a <requires> node (<requires module="" />).
			This is not necessary but it is a good practice to evaluate the existence of all required
			modules before the client is evaluating the requested module.
			
			All source files contained in a module will be crunched in one file, if the debug flag is
			set to false. Otherwise the server will create one file which contains the content of the
			original source files belonging to the module.
	-->
	<scripts
		version="1.3"
		language="javascript"
		debug="true"
		extension="js"
		contentType="application/x-javascript"
		src="E:\pages\webs\JSTools.JavaScript"
		type="JSTools.Config.ScriptFileManagement.JSScriptFileSectionHandlerFactory, JSTools.Config">

		<!--
			A module contains files. Only directly accomodated files will be rendered. The script files
			are rendered in the sort order, as you have specified them.
		-->
		<module name="JSTools" default="true">
			<file src="Core.js" />
			<file src="Object.js" />
			<file src="MemberProtector.js" />
			<file src="Function.js" />
			<file src="Array.js" />
			<file src="String.js">
				<![CDATA[ This is the string package. ]]>
			</file>

			<module name="Data">
				<file src="BaseTableElement.js" />
				<file src="HtmlTableColumn.js" />
				<file src="HtmlTableGenerator.js" />
				<file src="HtmlTableRow.js" />
			</module>
			
			<module name="Enum">
				<file src="FlagsEnum.js" />
				<file src="IEnum.js" />
				<file src="StringEnum.js" />
			</module>

			<module name="Event">
				<file src="BaseEventContainer.js" />
				<file src="ElementEvent.js" />
				<file src="EventArgument.js" />
				<file src="EventContainer.js" />
				<file src="EventItem.js" />
				<file src="EventSubject.js" />
				<file src="IEventArgument.js" />
			</module>

			<module name="Reflection">
				<file src="Type.js" />
			</module>

			<module name="Timer">
				<file src="TimerCallBack.js" />
				<file src="TimerThread.js" />
				<file src="TimerThreadPool.js" />
			</module>

			<module name="Web">
				<module name="Browser">
					<file src="BrowserInfo.js" />
					<file src="BrowserType.js" />
				</module>

				<module name="Cookie">
					<file src="CookieHandler.js" />
					<file src="CookieMultiValue.js" />
				</module>

				<module name="Diagnostics">
					<file src="ConsoleErrorMessage.js" />
					<file src="ConsoleMessage.js" />
					<file src="ConsoleStyle.js" />
					<file src="ConsoleWriter.js" />
					<file src="Exception.js" />
					<file src="TypeVisualizer.js" />
				</module>

				<module name="Form">
					<requires module="JSTools.Web.Layer" />

					<file src="FormValidator.js" />
				</module>

				<module name="Layer">
					<file src="BaseLayerConstructor.js" />
					<file src="BaseLayerGetter.js" />
					<file src="BaseLayerSetter.js" />
					<file src="BaseModelFactory.js" />
					<file src="ILayerValueContainer.js" />
					<file src="LayerClip.js" />
					<file src="LayerContainer.js" />
					<file src="LayerEvents.js" />
					<file src="LayerFactoryDescription.js" />
					<file src="LayerHandler.js" />
					<file src="LayerOriginalValues.js" />

					<module name="DOM">
						<file src="DomLayerConstructor.js" />
						<file src="DomLayerGetter.js" />
						<file src="DomLayerSetter.js" />
						<file src="DomModelFactory.js" />
					</module>

					<module name="IE">
						<requires module="JSTools.Web.Layer.DOM" />

						<file src="IeLayerConstructor.js" />
						<file src="IeLayerGetter.js" />
						<file src="IeModelFactory.js" />
					</module>
				</module>

				<module name="Util">
					<file src="ImageContainer.js" />
				</module>

				<module name="Window">
					<file src="WindowErrorArgument.js" />
					<file src="WindowEvent.js" />
					<file src="WindowOpener.js" />
					<file src="WindowOptions.js" />
				</module>
			</module>
		</module>
	</scripts>
 </JSTools.net>
</configuration>
